
#bap quarterly ETL
[db_connect]
#conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MDC_BAP_Quarterly;Trusted_Connection=yes;
#conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MaRSDataCatalyst_Dev2017aug;uid=mdc_user;pwd=riverByThe@lakes;
#conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MaRSDataCatalyst;uid=mdc_user;pwd=riverByThe@lakes;
#conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MDCDW;uid=mdc_user;pwd=riverByThe@lakes;
#conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MaRSDataCatalyst_Dev2017aug;uid=mdc_user;pwd=riverByThe@lakes;
conn = DRIVER={/usr/local/lib/libmsodbcsql.13.dylib};Server=10.101.2.74;Database=MaRSDataCatalyst;uid=sa;pwd=Jethro!2;



#File paths
[box_file_path]
path_bap = Box Sync/mnadew/IE/Data/ETL/BAP
path_bap_qa = Box Sync/mnadew/IE/Data/ETL/BAP/BAP_QA
path_bap_combined = Box Sync/mnadew/IE/Data/ETL/BAP/BAP Combined
path_cbinsights = Box Sync/mnadew/IE/Data/ETL/CBINSIGHTS
path_crunchbase = Box Sync/mnadew/IE/Data/ETL/CrunchBase
path_cvca = Box Sync/mnadew/IE/Data/ETL/CVCA
path_iaf = Box Sync/mnadew/IE/Data/ETL/IAF
path_osvp = Box Sync/mnadew/IE/Data/ETL/OSVP
path_survey = Box Sync/mnadew/IE/Data/ETL/SURVEY
path_tdw = Box Sync/mnadew/IE/Data/ETL/TDW
path_tr = Box Sync/mnadew/IE/Data/ETL/TR
path_web_scrape = Box Sync/mnadew/IE/Data/ETL/WEBSCRAPE
path_data = Box Sync/mnadew/IE/Data

path_validI = /Users/mnadew/Box Sync/MDC Shared/Innovation Economy/Data/BAP/Quarterly Data/BAP_FY18/Haltech Validation
path_validII = /Users/mnadew/Box Sync/MDC Shared/Innovation Economy/Data/BAP/Quarterly Data/BAP_FY18/Haltech Validation


# File types
[box_file_type]
spread_sheet = ['xlsx','xls']
csv_files = ['.csv']

#Crunchbase Details
[crunch_base]
url_with_location = https://api.crunchbase.com/v3.1/organizations?user_key=afeba35e3b1a7478009c8d73bbab367a&locations=canada
user_key = afeba35e3b1a7478009c8d73bbab367a
url_org = https://api.crunchbase.com/v3.1/organizations?locations=canada
url_person = https://api.crunchbase.com/v3.1/people?locations=canada
url_cat = https://api.crunchbase.com/v3.1/categories
url_loc = https://api.crunchbase.com/v3.1/locations?items_per_page=250

url_relationship = https://api.crunchbase.com/v3.1/organizations/{}?relationships={}&user_key=afeba35e3b1a7478009c8d73bbab367a


[dependency_query]
query = SELECT KCU1.TABLE_NAME AS FK_TABLE_NAME ,KCU2.TABLE_NAME AS REFERENCED_TABLE_NAME FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RC INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU1 ON KCU1.CONSTRAINT_CATALOG = RC.CONSTRAINT_CATALOG AND KCU1.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA AND KCU1.CONSTRAINT_NAME = RC.CONSTRAINT_NAME INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU2 ON KCU2.CONSTRAINT_CATALOG = RC.UNIQUE_CONSTRAINT_CATALOG AND KCU2.CONSTRAINT_SCHEMA = RC.UNIQUE_CONSTRAINT_SCHEMA AND KCU2.CONSTRAINT_NAME = RC.UNIQUE_CONSTRAINT_NAME AND KCU2.ORDINAL_POSITION = KCU1.ORDINAL_POSITION WHERE RC.CONSTRAINT_SCHEMA LIKE
load_order_query = with Fkeys as (select distinct OnTable = OnTable.name ,AgainstTable  = AgainstTable.name from sysforeignkeys fk inner join sysobjects onTable on fk.fkeyid = onTable.id inner join sysobjects againstTable on fk.rkeyid = againstTable.id where 1=1 AND AgainstTable.TYPE = 'U' AND OnTable.TYPE = 'U' and OnTable.Name <> AgainstTable.Name) ,MyData as (select OnTable = o.name ,AgainstTable = FKeys.againstTable from sys.objects o left join FKeys on  o.name = FKeys.onTable where 1=1 and o.type = 'U' and o.name not like 'sys%%' and SCHEMA_NAME(schema_id) LIKE WHAT_SCHEMA) ,MyRecursion as (select TableName = OnTable ,Lvl = 1 from MyData where 1=1 and AgainstTable is null union all select TableName = OnTable ,Lvl = r.Lvl + 1 from MyData d inner join MyRecursion r on d.AgainstTable = r.TableName) select Lvl = max(Lvl) ,TableName from MyRecursion group by TableName order by Lvl

[JLABS_Toronto_Annual_Survey_tgt_lst]
path = /Users/gcree/Box Sync/MaRS DataCatalyst 2017 CONFIDENTIAL/JLABS Toronto Annual Survey 2017/Target Lists/tgt_lst.xlsx

[test_tgt_lst]
path = /Users/gcree/Box Sync/MaRS DataCatalyst 2017 CONFIDENTIAL/JLABS Toronto Annual Survey 2017/Target Lists/test_tgt_lst.xlsx

[sql_queries]
insert_survey_entry = INSERT INTO JLABS.Surveys (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_qs = INSERT INTO JLABS.Questions (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_os = INSERT INTO JLABS.Question_Options (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_as = INSERT INTO JLABS.Question_Answers (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_rs = INSERT INTO JLABS.Survey_Responses (WHAT_HEADERS) VALUES (WHAT_VALUES)
update_rs = UPDATE JLABS.Survey_Responses SET
update_a_sql = UPDATE JLABS.Question_Answers SET
insert_contactlists = INSERT INTO JLABS.Contact_Lists (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_contacts__lists = INSERT INTO JLABS.Contacts__Lists (WHAT_HEADERS) VALUES (WHAT_VALUES)
check_questions_exist = SELECT CASE WHEN EXISTS (SELECT * FROM JLABS.Questions Q, JLABS.Surveys S WHERE Q.survey_id = S.id  AND S.id LIKE WHAT_SURVEY_ID) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END
all_answer_ids_for_survey = SELECT A.id, A.id id_in_DB FROM JLABS.Question_Answers A, JLABS.Questions Q, JLABS.Surveys S WHERE A.question_id = Q.id AND Q.survey_id = S.id AND S.id =	WHAT_SURVEY_ID
all_resp_ids_for_survey = SELECT * FROM JLABS.Survey_Responses R, JLABS.Surveys S WHERE R.survey_id = S.id AND S.id = WHAT_SURVEY_ID
all_resps_for_survey = SELECT DISTINCT * FROM JLABS.Survey_Responses R WHERE R.survey_id = WHAT_SURVEY_ID
all_contacts = SELECT id, email_address, firstname, lastname FROM JLABS.Contacts
contact_lists = SELECT id FROM JLABS.Contact_Lists
contacts__lists = SELECT sg_cid FROM JLABS.Contacts__Lists
del_ans = DELETE FROM JLABS.Question_Answers WHERE survey_response_id = WHAT_RESP_ID
check_ans = SELECT id FROM JLABS.Question_Answers WHERE survey_response_id IN (WHAT_RESP_IDS)
del_ans_by_respids = DELETE FROM JLABS.Question_Answers WHERE survey_response_id IN (WHAT_RESP_IDS)
del_resps_by_list = DELETE FROM JLABS.Survey_Responses WHERE id IN (WHAT_RESP_IDS)
insert_contacts = INSERT INTO JLABS.Contacts (WHAT_HEADERS) VALUES (WHAT_VALUES)
all_contacts__lists = SELECT * FROM JLABS.Contacts__Lists
insert_contacts_lists = INSERT INTO JLABS.Contacts__Lists (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_resp_reports = INSERT INTO JLABS.Resp_Status_Reports (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_resp_stats = INSERT INTO JLABS.Response_Statuses (WHAT_HEADERS) VALUES (WHAT_VALUES)
insert_campaigns = INSERT INTO JLABS.Campaigns (WHAT_HEADERS) VALUES (WHAT_VALUES)
campaigns_for_survey = SELECT id FROM JLABS.Campaigns WHERE survey_id = WHAT_SURVEY_ID
emails_for_campaign = SELECT id FROM JLABS.Email_Messages WHERE campaign_id = WHAT_CAMPAIGN
insert_emails = INSERT INTO JLABS.Email_Messages (WHAT_HEADERS) VALUES (WHAT_VALUES)
